@using CMS.WEB.Common
@using CMS.WebAssembly.Common
@using HttpMethod = CMS.WebAssembly.Common.HttpMethod
<style>
    .mud-list-item-icon {
        min-width: auto;
    }
</style>

<MudPaper Width="250px" Class="py-3" Elevation="0">
    <MudNavMenu>
        <MudStack Row>
            <MudItem>
                <MudText Typo="Typo.h6" Class="px-4">Tên Nhân Viên</MudText>
                <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Chức vụ</MudText>
            </MudItem>
            <MudMenu Icon="@Icons.Material.Filled.Settings" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                <MudMenuItem Icon="@Icons.Material.Filled.ManageAccounts">
                    <MudText>Thông tin tài khoản</MudText>
                </MudMenuItem>
                <MudMenuItem Icon="@Icons.Material.Filled.LockReset" Href="/changepassword">
                    <MudText>Đổi mật khẩu</MudText>
                </MudMenuItem>
                <MudMenuItem OnClick="HandlerLogoutAsync" Icon="@Icons.Material.Filled.Logout" IconColor="Color.Error">
                    <MudText Color="Color.Error">Đăng xuất</MudText>
                </MudMenuItem>
            </MudMenu>
        </MudStack>
        <MudDivider Class="my-2" />
        <MudNavLink Href="/admin">Dashboard</MudNavLink>
        <MudNavLink Href="/quanlynhanvien">Danh sách nhân viên</MudNavLink>
        <MudNavGroup Title="Quản lý bài viết">
            <MudNavLink Href="/articletopic">Chủ đề</MudNavLink>
            <MudNavLink Href="/article">Danh sách bài viết</MudNavLink>
        </MudNavGroup>
        <MudNavLink Href="/about">About</MudNavLink>
    </MudNavMenu>
</MudPaper>

@code{
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    private async Task HandlerLogoutAsync()
    {
        try
        {
            var logoutResponseMessage = await Client
                .SendAsync(HttpMethod.POST, ConstRequestUri.auLogout, null);
            if (logoutResponseMessage is null)
            {
                return;
            }
        
            if (logoutResponseMessage.IsSuccessStatusCode)
            {
                await Js.InvokeVoidAsync("localStorage.removeItem", "Token");
                await Js.InvokeVoidAsync("localStorage.removeItem", "Refresh");
                Navigation.NavigateTo("/login");
            }
            else
            {
                Snack.Add("Có lỗi xãy ra",Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snack.Add("Có lỗi server xãy ra",Severity.Error);
        }
        
    }
}